import axios from 'axios';
import React, { useEffect } from 'react';
import { useRouter } from 'next/router';
import Head from 'next/head';
import { useDispatch, useSelector } from 'react-redux';
import {
	getMessages,
	getUsersMessages,
} from '../../services/features/messages/messageSlice';
import { getUsers } from '../../services/features/users/usersSlice';
import { AppDispatch } from '../../services/store';
import RoomAside from '../../components/RoomAside';
import AsideUsers from '../../components/AsideUsers';
import ChatForm from '../../components/ChatForm';
import ChatItems from '../../components/ChatItems';
import ChatHeader from '../../components/ChatHeader';
import { io } from 'socket.io-client';
import Message from '../../components/skeleton/Message';
import { iUser } from '../../utils/types';

const Messages = () => {
	const dispatch = useDispatch<AppDispatch>();
	const router = useRouter();
	const { isLoading, isError } = useSelector((state: any) => state.messages);
	const { contact } = useSelector((state: any) => state.contact);

	useEffect(() => {
		console.log(contact);
		if (!contact) router.replace('/');
	}, [contact]);

	useEffect(() => {
		const socket = io(process.env.NEXT_PUBLIC_BACKEND_URI!);

		if (!contact) router.replace('/');
		else {
			socket.on('messages', (data) => {
				if (data.action == 'create') {
					dispatch(getMessages(contact && contact?._id));
				}
			});
		}
	}, [dispatch, contact]);

	return (
		<>
			<Head>
				<title>Crypto chat</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<main className='fixed top-0 bottom-0 left-0 right-0 bg-blue-900 flex flex-column '>
				<RoomAside />
				<AsideUsers />
				{/* Main messages */}
				<div className='flex flex-col w-full m-0 p-0 relative'>
					<div className='absolute top-0 bottom-0 left-0 right-0   bg-gray-900 rounded-xl p-0 m-0 sm:m-2 flex flex-col'>
						{/* header */}
						<ChatHeader />

						{/* display messages */}
						{isLoading ? (
							<Message />
						) : (
							<>
								<ChatItems />
							</>
						)}

						{/* send message input */}
						<ChatForm />
					</div>
				</div>
			</main>
		</>
	);
};

export default Messages;
