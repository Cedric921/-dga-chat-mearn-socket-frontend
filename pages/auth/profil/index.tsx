import Head from 'next/head';
import { useRouter } from 'next/router';
import React, { FormEvent, useEffect, useState } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import AsideUsers from '../../../components/AsideUsers';
import Header from '../../../components/mobile/Header';
import RoomAside from '../../../components/RoomAside';
import { getUsers } from '../../../services/features/users/usersSlice';
import {
	logout,
	updateImage,
	updateUser,
} from '../../../services/features/auth/authSlice';
import { AppDispatch } from '../../../services/store';
import styles from '../../../styles/Home.module.css';
import { CiUser } from 'react-icons/ci';
import Image from 'next/image';
import { BiLoader, BiLoaderAlt } from 'react-icons/bi';
import { toast } from 'react-toastify';
import { iUserInput } from '../../../utils/types';

const profil = () => {
	const dispatch = useDispatch<AppDispatch>();
	const [image, setImage] = useState<any>(null);
	const [profileInput, setProfileInput] = useState<iUserInput>({
		name: '',
		lastname: '',
		email: '',
		username: '',
	});
	const router = useRouter();
	const { user, isError, isLoading, isSucess, errorMessage } = useSelector(
		(state: any) => state.auth
	);

	const handleChange = (e: any) => {
		setProfileInput({ ...profileInput, [e.target.name]: e.target.value });
	};

	const handleSubmit = (e: FormEvent) => {
		e.preventDefault();
		dispatch(updateUser(profileInput));
	};

	const changeImgProfile = (e: FormEvent) => {
		e.preventDefault();
		const formData = new FormData();
		formData.append('image', image);
		console.log(formData);
		dispatch(updateImage(formData));
		//
	};

	useEffect(() => {
		dispatch(getUsers());
	}, []);

	useEffect(() => {
		if (isError) toast.error(`${errorMessage}`);
		if (isSucess) toast.success(` updated`);
	}, [isSucess, isError]);
	return (
		<div className={styles.container}>
			<Head>
				<title>Crypto chat</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<main className='fixed top-0 bottom-0 left-0 right-0 bg-blue-900 flex'>
				<RoomAside />
				<AsideUsers />

				{/* Main messages */}
				<div className='flex flex-col w-full m-0 p-0 relative'>
					<Header />
					<div className='h-full bottom-0 left-0 right-0   bg-gray-900 sm:rounded-xl p-4 m-0 sm:m-2 flex overflow-y-scroll'>
						<div className='profil m-4 flex flex-col md:flex-row gap-8 items-center'>
							<div className='flex-1 image_profile flex flex-col gap-4 items-center justify-center'>
								{/* profile img */}
								<div className='bg-slate-700 h-40 w-40 sm:h-72 sm:w-72 rounded-full flex items-center justify-center text-9xl text-slate-100'>
									{isLoading ? (
										<div className='h-full w-full flex items-center justify-center animate-spin'>
											<BiLoaderAlt className='text-3xl' />
										</div>
									) : (
										<>
											{user && user.imageUrl ? (
												<div className='h-full w-full'>
													<img
														src={user.imageUrl}
														width={'100%'}
														height='100%'
														className='w-full h-full rounded-full'
													/>
												</div>
											) : (
												<CiUser />
											)}
										</>
									)}
								</div>
								<form
									onSubmit={changeImgProfile}
									className='w-full'
									encType='multipart/form-data'
								>
									<input
										type='file'
										name='image'
										id=''
										className='w-1/2 text-slate-100 p-2 mx-auto'
										onChange={(e) => {
											console.log(e.target.files![0]);
											setImage(e.target.files![0]);
										}}
									/>
									<button
										type='submit'
										className='w-full md:w-40  p-2 bg-blue-900 hover:animate-pulse m-2 mt-4 px-8 text-slate-100 rounded-sm '
									>
										{isLoading ? (
											<div className='w-full flex justify-center'>
												<BiLoader className='animate-spin' />
											</div>
										) : (
											<>Update</>
										)}
									</button>
								</form>
							</div>
							<div className='data flex-2'>
								<form onSubmit={handleSubmit}>
									<h3 className='text-blue-800 mx-2 my-4 text-xl border-b-2 border-gray-600'>
										Informations personnelles
									</h3>
									<div className='flex flex-wrap pb-4'>
										<div className='w-full sm:w-1/2 p-2	text-slate-300'>
											<label htmlFor='name'>Prenom</label>
											<input
												type='text'
												id='name'
												name='name'
												value={user ? user.name : ''}
												className='w-full p-2 rounded-sm text-slate-300 bg-slate-600'
												onChange={handleChange}
											/>
										</div>
										<div className='w-full sm:w-1/2 p-2	text-slate-300'>
											<label htmlFor='lastname'>Nom</label>
											<input
												type='text'
												id='lastname'
												name='lastname'
												value={user ? user.lastname : ''}
												className='w-full p-2 rounded-sm text-slate-300 bg-slate-600'
												onChange={handleChange}
											/>
										</div>
									</div>
									<h3 className='text-blue-800 mx-2 my-4 text-xl border-b-2 border-gray-600'>
										Informations d'authentification
									</h3>
									<div className='flex flex-wrap mb-4'>
										<div className='w-full sm:w-1/2 p-2	text-slate-300'>
											<label htmlFor='email'>Email</label>
											<input
												type='email'
												id='email'
												name='email'
												value={user ? user.email : ''}
												className='w-full p-2 rounded-sm text-slate-300 bg-slate-600'
												onChange={handleChange}
											/>
										</div>
										<div className='w-full sm:w-1/2 p-2	text-slate-300'>
											<label htmlFor='lastname'>Nom d'utilisateur</label>
											<input
												type='text'
												id='username'
												name='username'
												value={user ? user.username : ''}
												className='w-full p-2 rounded-sm text-slate-300 bg-slate-600 '
												onChange={handleChange}
											/>
										</div>
									</div>
									<div className='flex flex-wrap pb-2'>
										<button className='w-full md:w-40  p-2 bg-blue-900 hover:animate-pulse m-2 mt-4 px-8 text-slate-100 rounded-sm '>
											Update
										</button>
									</div>
								</form>
							</div>
						</div>
					</div>
				</div>
			</main>
		</div>
	);
};

export default profil;
