import Head from 'next/head';
import { useRouter } from 'next/router';
import React, { FormEvent, useEffect, useState } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import AsideUsers from '../../../components/AsideUsers';
import RoomAside from '../../../components/RoomAside';
import { getUsers } from '../../../services/features/users/usersSlice';
import { logout } from '../../../services/features/auth/authSlice';
import { AppDispatch } from '../../../services/store';
import styles from '../../../styles/Home.module.css';
import { CiUser } from 'react-icons/ci';

const profil = () => {
	const dispatch = useDispatch<AppDispatch>();
	const [profileInput, setProfileInput] = useState({
		name: '',
		lastname: '',
		email: '',
		username: '',
	});
	const router = useRouter();
	const {
		user,
		isError: isErrorUser,
		errorMessage: errorUser,
	} = useSelector((state: any) => state.auth);

	const handleChange = (e: any) => {
		setProfileInput({ ...profileInput, [e.target.name]: e.target.value });
	};

	const handleSubmit = (e: FormEvent) => {
		e.preventDefault();
	};

	const changeImgProfile = () => {
		//
	};

	useEffect(() => {
		dispatch(getUsers());
	}, []);
	return (
		<div className={styles.container}>
			<Head>
				<title>Crypto chat</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<main className='fixed top-0 bottom-0 left-0 right-0 bg-blue-900 flex flex-column '>
				<RoomAside />
				<AsideUsers />
				{/* Main messages */}
				<div className='flex flex-col w-full m-0 p-0 relative'>
					<div className='absolute top-0 bottom-0 left-0 right-0   bg-gray-900 rounded-xl p-4 my-2 mx-2 flex overflow-y-scroll'>
						<div className='profil m-4 flex flex-col md:flex-row gap-8 items-center'>
							<div className='flex-1 image_profile flex flex-col gap-4 items-center justify-center'>
								{/* profile img */}
								<div className='bg-slate-700 h-40 w-40 sm:h-72 sm:w-72 rounded-full flex items-center justify-center text-9xl text-slate-100'>
									<CiUser />
								</div>
								<form onSubmit={changeImgProfile} className='w-full '>
									<input
										type='file'
										name='profile_img'
										id=''
										className='w-1/2 text-slate-100 p-2 mx-auto'
									/>
								</form>
							</div>
							<div className='data flex-2'>
								<form onSubmit={handleSubmit}>
									<h3 className='text-blue-800 mx-2 my-4 text-xl border-b-2'>
										Informations personnelles
									</h3>
									<div className='flex flex-wrap pb-4'>
										<div className='w-full sm:w-1/2 p-2	text-white'>
											<label htmlFor='name'>Prenom</label>
											<input
												type='text'
												id='name'
												name='name'
												value={user ? user.name : ''}
												className='w-full p-2 rounded-sm text-slate-800'
												onChange={handleChange}
											/>
										</div>
										<div className='w-full sm:w-1/2 p-2	text-white'>
											<label htmlFor='lastname'>Nom</label>
											<input
												type='text'
												id='lastname'
												name='lastname'
												value={user ? user.lastname : ''}
												className='w-full p-2 rounded-sm text-slate-800'
												onChange={handleChange}
											/>
										</div>
									</div>
									<h3 className='text-blue-800 mx-2 my-4 text-xl border-b-2'>
										Informations d'authentification
									</h3>
									<div className='flex flex-wrap mb-4'>
										<div className='w-full sm:w-1/2 p-2	text-white'>
											<label htmlFor='email'>Email</label>
											<input
												type='email'
												id='email'
												name='email'
												value={user ? user.email : ''}
												className='w-full p-2 rounded-sm text-slate-800'
												onChange={handleChange}
											/>
										</div>
										<div className='w-full sm:w-1/2 p-2	text-white'>
											<label htmlFor='lastname'>Nom d'utilisateur</label>
											<input
												type='text'
												id='username'
												name='username'
												value={user ? user.username : ''}
												className='w-full p-2 rounded-sm text-slate-800'
												onChange={handleChange}
											/>
										</div>
									</div>
									<div className='flex flex-wrap pb-2'>
										<button className='w-full md:w-40  p-2 bg-blue-900 hover:animate-pulse m-2 mt-4 px-8 text-slate-100 rounded-sm '>
											Update
										</button>
									</div>
								</form>
							</div>
						</div>
					</div>
				</div>
			</main>
		</div>
	);
};

export default profil;
